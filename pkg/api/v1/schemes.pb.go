// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: api/proto/v1/schemes.proto

package v1

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Manifest represents the structure used by ARTIC to store scheme metadata.
type Manifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata   string                     `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Repository string                     `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`
	LatestDoi  string                     `protobuf:"bytes,3,opt,name=latest_doi,json=latestDoi,proto3" json:"latest_doi,omitempty"`
	License    string                     `protobuf:"bytes,4,opt,name=license,proto3" json:"license,omitempty"`
	Schemes    map[string]*SchemeMetadata `protobuf:"bytes,5,rep,name=schemes,proto3" json:"schemes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Manifest) Reset() {
	*x = Manifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_schemes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Manifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Manifest) ProtoMessage() {}

func (x *Manifest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_schemes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Manifest.ProtoReflect.Descriptor instead.
func (*Manifest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_schemes_proto_rawDescGZIP(), []int{0}
}

func (x *Manifest) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *Manifest) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (x *Manifest) GetLatestDoi() string {
	if x != nil {
		return x.LatestDoi
	}
	return ""
}

func (x *Manifest) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *Manifest) GetSchemes() map[string]*SchemeMetadata {
	if x != nil {
		return x.Schemes
	}
	return nil
}

// SchemeMetadata.
type SchemeMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aliases                  []string          `protobuf:"bytes,1,rep,name=aliases,proto3" json:"aliases,omitempty"`
	LatestVersion            int32             `protobuf:"varint,2,opt,name=latest_version,json=latestVersion,proto3" json:"latest_version,omitempty"`
	PrimerUrls               map[string]string `protobuf:"bytes,3,rep,name=primer_urls,json=primerUrls,proto3" json:"primer_urls,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ReferenceUrls            map[string]string `protobuf:"bytes,4,rep,name=reference_urls,json=referenceUrls,proto3" json:"reference_urls,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PrimerSha256Checksums    map[string]string `protobuf:"bytes,5,rep,name=primer_sha256_checksums,json=primerSha256Checksums,proto3" json:"primer_sha256_checksums,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ReferenceSha256Checksums map[string]string `protobuf:"bytes,6,rep,name=reference_sha256_checksums,json=referenceSha256Checksums,proto3" json:"reference_sha256_checksums,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SchemeMetadata) Reset() {
	*x = SchemeMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_schemes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchemeMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemeMetadata) ProtoMessage() {}

func (x *SchemeMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_schemes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemeMetadata.ProtoReflect.Descriptor instead.
func (*SchemeMetadata) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_schemes_proto_rawDescGZIP(), []int{1}
}

func (x *SchemeMetadata) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

func (x *SchemeMetadata) GetLatestVersion() int32 {
	if x != nil {
		return x.LatestVersion
	}
	return 0
}

func (x *SchemeMetadata) GetPrimerUrls() map[string]string {
	if x != nil {
		return x.PrimerUrls
	}
	return nil
}

func (x *SchemeMetadata) GetReferenceUrls() map[string]string {
	if x != nil {
		return x.ReferenceUrls
	}
	return nil
}

func (x *SchemeMetadata) GetPrimerSha256Checksums() map[string]string {
	if x != nil {
		return x.PrimerSha256Checksums
	}
	return nil
}

func (x *SchemeMetadata) GetReferenceSha256Checksums() map[string]string {
	if x != nil {
		return x.ReferenceSha256Checksums
	}
	return nil
}

var File_api_proto_v1_schemes_proto protoreflect.FileDescriptor

var file_api_proto_v1_schemes_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfe, 0x01, 0x0a,
	0x08, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x64, 0x6f, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x44, 0x6f, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x07, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x73,
	0x1a, 0x4b, 0x0a, 0x0c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc7, 0x05,
	0x0a, 0x0e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x40, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x72, 0x55, 0x72,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x72, 0x55,
	0x72, 0x6c, 0x73, 0x12, 0x49, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0d, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x62,
	0x0a, 0x17, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x15, 0x70, 0x72, 0x69,
	0x6d, 0x65, 0x72, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x73, 0x12, 0x6b, 0x0a, 0x1a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x18, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x73, 0x1a,
	0x3d, 0x0a, 0x0f, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x40,
	0x0a, 0x12, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x48, 0x0a, 0x1a, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4b, 0x0a, 0x1d, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x08, 0x5a, 0x06, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_v1_schemes_proto_rawDescOnce sync.Once
	file_api_proto_v1_schemes_proto_rawDescData = file_api_proto_v1_schemes_proto_rawDesc
)

func file_api_proto_v1_schemes_proto_rawDescGZIP() []byte {
	file_api_proto_v1_schemes_proto_rawDescOnce.Do(func() {
		file_api_proto_v1_schemes_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_v1_schemes_proto_rawDescData)
	})
	return file_api_proto_v1_schemes_proto_rawDescData
}

var file_api_proto_v1_schemes_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_proto_v1_schemes_proto_goTypes = []interface{}{
	(*Manifest)(nil),       // 0: Manifest
	(*SchemeMetadata)(nil), // 1: SchemeMetadata
	nil,                    // 2: Manifest.SchemesEntry
	nil,                    // 3: SchemeMetadata.PrimerUrlsEntry
	nil,                    // 4: SchemeMetadata.ReferenceUrlsEntry
	nil,                    // 5: SchemeMetadata.PrimerSha256ChecksumsEntry
	nil,                    // 6: SchemeMetadata.ReferenceSha256ChecksumsEntry
}
var file_api_proto_v1_schemes_proto_depIdxs = []int32{
	2, // 0: Manifest.schemes:type_name -> Manifest.SchemesEntry
	3, // 1: SchemeMetadata.primer_urls:type_name -> SchemeMetadata.PrimerUrlsEntry
	4, // 2: SchemeMetadata.reference_urls:type_name -> SchemeMetadata.ReferenceUrlsEntry
	5, // 3: SchemeMetadata.primer_sha256_checksums:type_name -> SchemeMetadata.PrimerSha256ChecksumsEntry
	6, // 4: SchemeMetadata.reference_sha256_checksums:type_name -> SchemeMetadata.ReferenceSha256ChecksumsEntry
	1, // 5: Manifest.SchemesEntry.value:type_name -> SchemeMetadata
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_api_proto_v1_schemes_proto_init() }
func file_api_proto_v1_schemes_proto_init() {
	if File_api_proto_v1_schemes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_v1_schemes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Manifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_schemes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchemeMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_v1_schemes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_v1_schemes_proto_goTypes,
		DependencyIndexes: file_api_proto_v1_schemes_proto_depIdxs,
		MessageInfos:      file_api_proto_v1_schemes_proto_msgTypes,
	}.Build()
	File_api_proto_v1_schemes_proto = out.File
	file_api_proto_v1_schemes_proto_rawDesc = nil
	file_api_proto_v1_schemes_proto_goTypes = nil
	file_api_proto_v1_schemes_proto_depIdxs = nil
}
